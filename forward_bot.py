# main.py - –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –±–æ—Ç–∞
import os
import logging
from telegram import Update
from telegram.ext import ApplicationBuilder, ContextTypes, MessageHandler, filters
from flask import Flask
import threading

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

BOT_TOKEN = os.getenv("BOT_TOKEN")
GROUP_CHAT_ID = int(os.getenv("GROUP_CHAT_ID", "-1002512367222"))

async def forward_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        user_name = update.effective_user.first_name or "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
        
        # –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—é
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text=f"–ü—Ä–∏–≤–µ—Ç, {user_name}! –°–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ú—ã —Å–∫–æ—Ä–æ —Å —Ç–æ–±–æ–π —Å–≤—è–∂–µ–º—Å—è ü§ù"
        )
        
        # –ü–µ—Ä–µ—Å–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É
        await context.bot.forward_message(
            chat_id=GROUP_CHAT_ID,
            from_chat_id=update.effective_chat.id,
            message_id=update.message.message_id
        )
        
        logging.info(f"Message forwarded from {update.effective_user.id}")
        
    except Exception as e:
        logging.error(f"Error in forward_message: {e}")
        # –ë–æ—Ç –ø—Ä–æ–¥–æ–ª–∂–∏—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ

def main():
    # –°–æ–∑–¥–∞–µ–º Flask app –¥–ª—è Render (—á—Ç–æ–±—ã –Ω–µ —Ç—Ä–µ–±–æ–≤–∞–ª Background Worker)
    app_flask = Flask(__name__)
    
    @app_flask.route('/')
    def home():
        return "Telegram Bot is running!"
    
    @app_flask.route('/health')
    def health():
        return "OK", 200
    
    # Telegram –±–æ—Ç
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), forward_message))
    
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask —Å–µ—Ä–≤–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    def run_flask():
        app_flask.run(host='0.0.0.0', port=int(os.environ.get('PORT', 10000)), debug=False, use_reloader=False)
    
    flask_thread = threading.Thread(target=run_flask, daemon=True)
    flask_thread.start()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
    try:
        app.run_polling(
            drop_pending_updates=True,
            timeout=20,
            pool_timeout=20
        )
    except Exception as e:
        logging.error(f"Bot polling error: {e}")
        # –ù–µ –∑–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å, –ø—É—Å—Ç—å Render –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç

if __name__ == "__main__":
    main()